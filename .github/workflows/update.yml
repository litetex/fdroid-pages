name: Update

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  check-for-update:
    runs-on: ubuntu-latest
    outputs:
      requires_update: ${{ steps.check.outputs.requires_update }}
      latest_version: ${{ steps.check.outputs.latest_version }}
      latest_version_download_url: ${{ steps.check.outputs.latest_version_download_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Download new APK if required
        id: check
        run: |
          latest_release_data=$(curl -L https://api.github.com/repos/TeamNewPipe/NewPipe-nightly/releases/latest)
          latest_release_name=$(echo "$latest_release_data" | jq '.name')
          echo "Latest version is \'$latest_release_name\'"

          current_deployed_release=$(cat current.txt || echo "")
          echo "Currently deployed version is \'$current_deployed_release\'"

          if [[ "$latest_release_name" == "$current_deployed_release" ]]; then
            echo "requires_update=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "requires_update=true" >> "$GITHUB_OUTPUT"
          echo "latest_version=$latest_release_name" >> "$GITHUB_OUTPUT"

          latest_version_download_url=$(echo "$latest_release_data" | grep "browser_download_url.*apk" | cut -d : -f 2,3 | tr -d \" )
          echo "Latest version download url is \'$latest_version_download_url\'"
          echo "latest_version_download_url=$latest_version_download_url" >> "$GITHUB_OUTPUT"

  update:
    runs-on: ubuntu-latest
    needs: check-for-update
    if: ${{ needs.check-for-update.outputs.requires_update }}
    steps:
      - uses: actions/checkout@v4

      - run: echo "${{ needs.check-for-update.outputs.latest_version_download_url }}"
